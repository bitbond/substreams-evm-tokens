CREATE MATERIALIZED VIEW IF NOT EXISTS mv_ohlc_prices
REFRESH EVERY 1 HOUR OFFSET 5 MINUTE
TO ohlc_prices
AS
WITH
    any(p.token0) AS t0,
    any(p.token1) AS t1,
    pow(10, m0.decimals) AS scale0,
    pow(10, m1.decimals) AS scale1
SELECT
    toStartOfHour(s.timestamp)  AS timestamp,
    s.pool                      AS pool,
    any(s.protocol)             AS protocol,

    -- token0 erc20 metadata --
    t0                      AS token0,
    any(m0.decimals)        AS decimals0,
    any(m0.symbol)          AS symbol0,
    any(m0.name)            AS name0,

    -- token1 erc20 metadata --
    t1                      AS token1,
    any(m1.decimals)        AS decimals1,
    any(m1.symbol)          AS symbol1,
    any(m1.name)            AS name1,

    -- canonical pair --
    if(t0 < t1, t0, t1) AS canonical0,
    if(t0 < t1, t1, t0) AS canonical1,

    -- swaps --
    argMinState(s.price * scale0 / scale1, s.global_sequence)                AS open0,
    quantileDeterministicState(s.price * scale0 / scale1, s.global_sequence) AS quantile0,
    argMaxState(s.price * scale0 / scale1, s.global_sequence)                AS close0,

    -- volume --
    sum(abs(s.amount0) / scale0)        AS gross_volume0,
    sum(abs(s.amount1) / scale1)        AS gross_volume1,
    sum(s.amount0 / scale0)             AS net_flow0,
    sum(s.amount1 / scale1)             AS net_flow1,

    -- universal --
    uniqState(s.tx_from)                AS uaw,
    count()                             AS transactions
FROM swaps AS s
JOIN pools AS p USING (pool)
JOIN erc20_metadata AS m0 ON m0.address = p.token0
JOIN erc20_metadata AS m1 ON m1.address = p.token1
GROUP BY pool, timestamp;
